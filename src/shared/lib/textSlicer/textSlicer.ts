interface iTextSliser {
   text: string,
   number: number,
 }

export const textSliser = (params: iTextSliser) => {
    const { text, number } = params;

    if (number > text.length) {
        return text
    } else {
        let sliceText = text.slice(0, number)
        const pointIndex = sliceText.lastIndexOf('.')
        if (pointIndex === -1) {
            const commaIndex = sliceText.lastIndexOf(',')
            if (commaIndex === -1) {
                return `${sliceText}...`
            }
            else {
                sliceText = text.slice(0, commaIndex)
                return `${sliceText}...`
            }
        } else {
            console.log(4);
            sliceText = text.slice(0, pointIndex)
            return `${sliceText}`
        }
    }
}

textSliser({
    text: '–í –ú–∞–≥–Ω–∏—Ç–æ–≥–æ—Ä—Å–∫–µ –æ—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ, –Ω–æ —Ñ–æ—Ç–æ –¥–ª—è –±–æ–ª–µ–ª—å—â–∏–∫–æ–≤ —ç—Ç–æ —Å–≤—è—Ç–æ–µ. üëåüèªüíô –ó–∞–≤—Ç—Ä–∞ –∂–¥–µ–º –≤–∞—Å –Ω–∞ –ø—Ä—è–º–æ–π —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ –º–∞—Ç—á–∞ ¬´–ú–µ—Ç—Ç–∞–ª—É—Ä–≥¬ª - ¬´–î–∏–Ω–∞–º–æ¬ª –≤ 15:00 (–ø–æ –º—Å–∫)',
    number: 80})